function [E, af,z] = gf_modelefield(md, cut, ai, af)
% [E, af] = gf_modelefield(md, cut, ai, af)
m = cell2struct(md.layer(:,2), md.layer(:,1),1);
z = fix(-m.interface(end)*0.1):-1:fix(m.interface(end)+m.interface(end)*0.1);




r0 = 2.82E-5;
lambda = 12.576/m.xEng;
%k0 = 2*pi/lambda;
ai = ai(:);
Ei = zeros(length(z), length(ai));
s.eden = m.edensity;
s.beta = m.beta;
s.zin = [m.interface(2:end)];
s.sig = [m.roughness(2:end)];
[s, eden, beta, zin, r] = slabProfile(s);
zinter
d1 = 1/(2*pi)*r0*lambda^2*eden;
b1 = beta;
      RAWPROFILE: N+1 x 5, with each column representing as follows,
%               column 1: depth (z-coordinate, unit: A) of N physical 
%                   interfaces from top to bottom (last z can be any 
%                   arbitray value, only standing for substrate); 
%               column 2: dispersion (delta) above each interface. The last
%                   row means substrate;
%               column 3: absorption (beta) above each interface. The last
%                   row means substrat;
%               column 4: roughness of each interface (unit: A). The last 
%                   row can be arbitrary); 
%               column 5: profile function of each interface with 
%                   0 = error function profile
%                   1 = hyperbolic tangent profile.
%                   Profile of the last row (substrate) can be arbitrary. 
prof = [s.zin(:), 


%if nargin == 3
%    E = efieldcal_ang(ai, z, 12.576/m.xEng, m.edensity, m.beta, m.interface(2:end), m.roughness(2:end));
%elseif nargin == 4
%    E = efieldcal_ang(af, z, 12.576/m.xEng, m.edensity, m.beta, m.interface(2:end), m.roughness(2:end));%, af);
%else
%    af = cut(:,2);
%    E = efieldcal_ang(af, z, 12.576/m.xEng, m.edensity, m.beta, m.interface(2:end), m.roughness(2:end));%, af);
%end

